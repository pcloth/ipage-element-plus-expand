import{_ as e,c as d,j as l,a as n,G as a,aQ as i,B as o,o as u}from"./chunks/framework.BF6TlLIM.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"examples/RenderCell/item.md","filePath":"examples/RenderCell/item.md"}'),r={name:"examples/RenderCell/item.md"},p={tabindex:"0"},k={tabindex:"0"};function m(h,t,b,E,g,y){const s=o("api-typing");return u(),d("div",null,[t[38]||(t[38]=l("h2",{id:"rendercell-属性",tabindex:"-1"},[n("RenderCell 属性 "),l("a",{class:"header-anchor",href:"#rendercell-属性","aria-label":'Permalink to "RenderCell 属性"'},"​")],-1)),l("table",p,[t[9]||(t[9]=l("thead",null,[l("tr",null,[l("th",null,"属性"),l("th",null,"类型"),l("th",null,"说明"),l("th",null,"默认值")])],-1)),l("tbody",null,[l("tr",null,[t[0]||(t[0]=l("td",null,"modelValue",-1)),l("td",null,[a(s,{type:"enum",details:"'String' | 'Number' | 'Array' | 'Object' | 'Date'"})]),t[1]||(t[1]=l("td",null,"v-model数据",-1)),t[2]||(t[2]=l("td",null,[l("code",null,"undefined")],-1))]),t[3]||(t[3]=l("tr",null,[l("td",null,"item"),l("td",null,"object"),l("td",null,"渲染组件内容数据，下方有详细说明"),l("td",null,[l("code",null,"undefined")])],-1)),t[4]||(t[4]=l("tr",null,[l("td",null,"defaultSlot"),l("td",null,"string"),l("td",null,[l("code",null,"item"),n("对象中如果没有"),l("code",null,"slot"),n("值，将使用defaultSlot")]),l("td",null,[l("code",null,"undefined")])],-1)),t[5]||(t[5]=l("tr",null,[l("td",null,"defaultProp"),l("td",null,"object"),l("td",null,[l("code",null,"item"),n("对象中如果没有"),l("code",null,"props"),n("defaultProp")]),l("td",null,[l("code",null,"undefined")])],-1)),t[6]||(t[6]=l("tr",null,[l("td",null,"allItems"),l("td",null,"array"),l("td",null,[n("兄弟RenderCell数据集，传递给荷载数据"),l("code",null,"loadData")]),l("td",null,[l("code",null,"undefined")])],-1)),t[7]||(t[7]=l("tr",null,[l("td",null,"formData"),l("td",null,"object"),l("td",null,[n("父级表单model数据，传递给荷载数据"),l("code",null,"loadData")]),l("td",null,[l("code",null,"undefined")])],-1)),t[8]||(t[8]=l("tr",null,[l("td",null,"qData"),l("td",null,"Object"),l("td",null,[n("父级附加数据，传递给荷载数据"),l("code",null,"loadData")]),l("td",null,[l("code",null,"undefined")])],-1))])]),t[39]||(t[39]=l("h2",{id:"item-属性",tabindex:"-1"},[n("item 属性 "),l("a",{class:"header-anchor",href:"#item-属性","aria-label":'Permalink to "item 属性"'},"​")],-1)),l("table",k,[t[37]||(t[37]=l("thead",null,[l("tr",null,[l("th",null,"属性"),l("th",null,"类型"),l("th",null,"说明"),l("th",null,"默认值")])],-1)),l("tbody",null,[t[16]||(t[16]=l("tr",null,[l("td",null,"sort"),l("td",null,"number"),l("td",null,"排序，当需要排序的地方，可以用它来插入到默认单元的前面"),l("td",null,[l("code",null,"undefined")])],-1)),t[17]||(t[17]=l("tr",null,[l("td",null,"id"),l("td",null,"string"),l("td",null,"表单组件v-model的对象key，循环渲染时候的key"),l("td",null,"如果不传入，将随机生成一个uuid")],-1)),t[18]||(t[18]=l("tr",null,[l("td",null,"label"),l("td",null,"string"),l("td",null,"当isFormItem=true时候，表单标签"),l("td",null,[l("code",null,"undefined")])],-1)),t[19]||(t[19]=l("tr",null,[l("td",null,"tip"),l("td",null,"string"),l("td",null,"input的placeholder，span、button、link、checkbox的默认插槽"),l("td",null,[l("code",null,"undefined")])],-1)),t[20]||(t[20]=l("tr",null,[l("td",null,"slot"),l("td",null,"string"),l("td",null,[n("需要渲染的element-ui组件类型，默认去掉el字符，比如el-input，写为"),l("code",null,"input")]),l("td",null,[l("code",null,"undefined")])],-1)),l("tr",null,[t[10]||(t[10]=l("td",null,"options",-1)),l("td",null,[a(s,{type:"enum",details:"'array' | 'function' | 'async function'"})]),t[11]||(t[11]=l("td",null,"select、radio-group、checkbox-group子组件的options",-1)),t[12]||(t[12]=l("td",null,"[]",-1))]),t[21]||(t[21]=l("tr",null,[l("td",null,"directives"),l("td",null,"array"),l("td",null,"自定义指令数据"),l("td",null,"[]")],-1)),t[22]||(t[22]=l("tr",null,[l("td",null,"debounce"),l("td",null,"boolen,number"),l("td",null,"v-model是否需要额外的防抖"),l("td",null,[l("code",null,"undefined")])],-1)),t[23]||(t[23]=l("tr",null,[l("td",null,"render"),l("td",null,[l("code",null,"jsx Function")]),l("td",null,"当slot='render'的时候生效，直接渲染dom"),l("td",null,"无")],-1)),t[24]||(t[24]=l("tr",null,[l("td",null,"slots"),l("td",null,"object"),l("td",null,"用于组件的插槽"),l("td",null,"{}")],-1)),t[25]||(t[25]=l("tr",null,[l("td",null,"props"),l("td",null,"object"),l("td",null,"传递给原生组件的props，如果其中有function类型，会自动添加loadData数据"),l("td",null,"{}")],-1)),t[26]||(t[26]=l("tr",null,[l("td",null,"on"),l("td",null,"object"),l("td",null,"传递给原生组件的on,用于接收组件的emit事件，会自动添加loadData数据"),l("td",null,"{}")],-1)),t[27]||(t[27]=l("tr",null,[l("td",null,"show"),l("td",null,"boolen|Function"),l("td",null,"是否显示本组件，类似v-show"),l("td",null,"true")],-1)),t[28]||(t[28]=l("tr",null,[l("td",null,"isFormItem"),l("td",null,"boolen"),l("td",null,"是否在父级添加el-form-item组件"),l("td",null,"true")],-1)),t[29]||(t[29]=l("tr",null,[l("td",null,"formItemProps"),l("td",null,"object"),l("td",null,"如果isFormItem=true的时候，父级el-form-item组件的props参数"),l("td",null,"{}")],-1)),t[30]||(t[30]=l("tr",null,[l("td",null,"isCol"),l("td",null,"boolean"),l("td",null,"是否添加一个el-col组件在外层"),l("td",null,"false")],-1)),t[31]||(t[31]=l("tr",null,[l("td",null,"colProps"),l("td",null,"object"),l("td",null,"如果添加了el-col，给它的配置"),l("td")],-1)),t[32]||(t[32]=l("tr",null,[l("td",null,"otherValueRange"),l("td",null,"Array<string>"),l("td",null,"比如date-pcker组件，如果指定了时间范围，将会获得一个array的value，你可以在这里配置它们映射的其他value，比如['start','end']，将会把['2021-01-01','2021-01-02']映射成{start:'2021-01-01',end:'2021-01-02'}"),l("td")],-1)),t[33]||(t[33]=l("tr",null,[l("td",null,"valueWatch"),l("td",null,"Function"),l("td",null,"当值发生变化时，触发这个方法"),l("td")],-1)),t[34]||(t[34]=l("tr",null,[l("td",null,"optionDom"),l("td",null,[l("code",null,"jsx Function")]),l("td",null,"自定义options节点的渲染函数"),l("td")],-1)),l("tr",null,[t[13]||(t[13]=l("td",null,"mask",-1)),l("td",null,[a(s,{type:"enmu",details:"'string' | 'Array<string>' | 'Object'"})]),t[14]||(t[14]=l("td",null,[n("限定输入范围，详情可以查看"),l("code",null,"mask属性"),n("，如果全局安装后，可以直接使用"),l("code",null,"v-ipage-mask"),n("指令")],-1)),t[15]||(t[15]=l("td",null,null,-1))]),t[35]||(t[35]=l("tr",null,[l("td",null,"money"),l("td",null,"object"),l("td",null,[n("限定输入为金额格式，查看下方"),l("code",null,"money属性"),n("，如果全局安装后，可以直接使用"),l("code",null,"v-ipage-money"),n("指令")]),l("td",null,[l("code",null,"{min: 0,precision: 2, max: Number.MAX_SAFE_INTEGER, complete: true}")])],-1)),t[36]||(t[36]=l("tr",null,[l("td",null,"...rest"),l("td",null,"any"),l("td",null,[n("其他属性，将传递给实际的组件，推荐你还是应该放到上面的"),l("code",null,"props"),n("里面，因为放在这里的方法不会被注入"),l("code",null,"loadData")]),l("td",null,"{}")],-1))])]),t[40]||(t[40]=i(`<h2 id="item-mask-属性" tabindex="-1">item.mask 属性 <a class="header-anchor" href="#item-mask-属性" aria-label="Permalink to &quot;item.mask 属性&quot;">​</a></h2><blockquote><p>此功能代码来自于<a href="https://www.npmjs.com/package/vue-the-mask" target="_blank" rel="noreferrer">vue-the-mask</a></p></blockquote><h4 id="方法一-传入字符串或者数组字符串-表示如下默认值" tabindex="-1">方法一：传入字符串或者数组字符串，表示如下默认值： <a class="header-anchor" href="#方法一-传入字符串或者数组字符串-表示如下默认值" aria-label="Permalink to &quot;方法一：传入字符串或者数组字符串，表示如下默认值：&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>    mask:&quot;##-###&quot;</span></span></code></pre></div><p>表示接收2位数的数字加横线+3位的数字</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><pre><code>其中默认的规则有：
    C: { pattern: /[\\u4e00-\\u9fa5]/ },
    &quot;#&quot;: { pattern: /\\d/ },
    X: { pattern: /[0-9a-zA-Z]/ },
    S: { pattern: /[a-zA-Z]/ },
    A: { pattern: /[a-zA-Z]/, transform: v =&gt; v.toLocaleUpperCase() },
    a: { pattern: /[a-zA-Z]/, transform: v =&gt; v.toLocaleLowerCase() },
    &quot;!&quot;: { escape: true }
</code></pre></div><h4 id="方法二-传入对象-表示自定义规则-比如" tabindex="-1">方法二：传入对象，表示自定义规则，比如： <a class="header-anchor" href="#方法二-传入对象-表示自定义规则-比如" aria-label="Permalink to &quot;方法二：传入对象，表示自定义规则，比如：&quot;">​</a></h4><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>        mask:{</span></span>
<span class="line"><span>            mask:&quot;ff&quot;,</span></span>
<span class="line"><span>            tokens:{</span></span>
<span class="line"><span>                f:{</span></span>
<span class="line"><span>                    pattern: /[a-zA-Z]/, </span></span>
<span class="line"><span>                    transform: v =&gt; v.toLocaleUpperCase() </span></span>
<span class="line"><span>                }</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>它将只接收2个英文，并转换成大写</p></div><h2 id="item-money-属性" tabindex="-1">item.money 属性 <a class="header-anchor" href="#item-money-属性" aria-label="Permalink to &quot;item.money 属性&quot;">​</a></h2><table tabindex="0"><thead><tr><th>属性</th><th>类型</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>min</td><td>number</td><td>允许输入的最小值，它如果是负数，则允许输入负数</td><td>0</td></tr><tr><td>max</td><td>number</td><td>允许输入的最大值，它如果是负数，则只允许输入负数</td><td><code>Number.MAX_SAFE_INTEGER</code></td></tr><tr><td>precision</td><td>number</td><td>小数位数</td><td>2</td></tr><tr><td>complete</td><td>boolen</td><td>是否给小数位数添0补位，你如果在默认值的情况下输入0.5，失去焦点的时候将会变为0.50</td><td>true</td></tr></tbody></table><h2 id="loaddata-荷载数据" tabindex="-1">loadData 荷载数据 <a class="header-anchor" href="#loaddata-荷载数据" aria-label="Permalink to &quot;loadData 荷载数据&quot;">​</a></h2><p>传递给组件方法的有如下数据：<code>item</code>、<code>data</code>、<code>qData</code>、<code>allItems</code>、<code>$rcell</code></p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>所有在item配置on和props下面的方法，都会被注入<code>loadData</code>，在方法自身参数的最后面，比如change事件</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;slot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;input&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;on&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:{</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;change&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">loadData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // 常规的change只会提交val参数，而渲染核心会附加一个loadData进来。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(val,loadData,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;change&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></div><h3 id="loaddata-数据包括以下内容" tabindex="-1">loadData 数据包括以下内容 <a class="header-anchor" href="#loaddata-数据包括以下内容" aria-label="Permalink to &quot;loadData 数据包括以下内容&quot;">​</a></h3><ol><li><code>item</code>为自生接收到的props.item</li><li><code>data</code>为props.formData</li><li><code>qData</code>为props.qData</li><li><code>allItems</code>为props.allItems</li><li><code>$rcell</code>为组件的实例</li></ol>`,16))])}const v=e(r,[["render",m]]);export{c as __pageData,v as default};
